services:
  postgres:
    image: 'postgres:11.1-alpine'
    container_name: buscacreci_postgres
    restart: unless-stopped
    working_dir: /application
    volumes:
      - './:/application'
      - './docker/postgres/pg-config:/etc/postgresql'
      - './docker/postgres/init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql'
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_DATABASE}
    ports:
      - 8043:5432
    networks:
      - buscacreci_network

  api:
    image: 'nginx:alpine'
    container_name: buscacreci_nginx_api
    working_dir: /application
    depends_on:
      - postgres
    volumes:
      - './:/application'
      - './docker/nginx/nginx_api.conf:/etc/nginx/conf.d/default.conf'
      - './src:/application/src:rw'
    ports:
      - '8053:80'
    networks:
      - buscacreci_network

  php-fpm:
    build: ./docker/php-fpm
    container_name: buscacreci_php
    working_dir: /application
    depends_on:
      - postgres
    volumes:
      - './:/application'
      - './docker/php-fpm/php-ini-overrides.ini:/etc/php/8.3/fpm/conf.d/99-overrides.ini'
    networks:
      - buscacreci_network
    environment:
      - DB_HOST=${DB_CONNECTION}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}

networks:
  buscacreci_network:

volumes:
  pg-data:
  pg-config:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "$PWD/./docker/postgres"
